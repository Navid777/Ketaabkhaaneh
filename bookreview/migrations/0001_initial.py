# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-01-16 08:31
from __future__ import unicode_literals

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=1024)),
                ('date_added', models.DateTimeField(default=datetime.datetime.now)),
                ('deleted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256)),
                ('original_title', models.CharField(blank=True, max_length=256, null=True)),
                ('date_added', models.DateTimeField(default=datetime.datetime.now)),
                ('deleted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('text', models.TextField()),
                ('date_added', models.DateTimeField(default=datetime.datetime.now)),
                ('deleted', models.BooleanField(default=False)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='bookreview.Article')),
            ],
        ),
        migrations.CreateModel(
            name='Film',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256)),
                ('original_title', models.CharField(blank=True, max_length=256, null=True)),
                ('date_added', models.DateTimeField(default=datetime.datetime.now)),
                ('deleted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='FormattedText',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.TextField()),
                ('date_added', models.DateTimeField(default=datetime.datetime.now)),
                ('deleted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256)),
                ('alt_text', models.TextField()),
                ('image', models.FileField(upload_to=b'images/')),
                ('thumbnail', models.FileField(blank=True, upload_to=b'images/')),
                ('date_added', models.DateTimeField(default=datetime.datetime.now)),
                ('deleted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('original_name', models.CharField(blank=True, max_length=256, null=True)),
                ('date_added', models.DateTimeField(default=datetime.datetime.now)),
                ('deleted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Reference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(choices=[(1, 'Person'), (2, 'Book'), (3, 'Film')])),
                ('date_added', models.DateTimeField(default=datetime.datetime.now)),
                ('deleted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256)),
                ('date_added', models.DateTimeField(default=datetime.datetime.now)),
                ('deleted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256)),
                ('video', models.FileField(upload_to=b'videos/')),
                ('thumbnail', models.FileField(blank=True, upload_to=b'videos/')),
                ('date_added', models.DateTimeField(default=datetime.datetime.now)),
                ('deleted', models.BooleanField(default=False)),
            ],
        ),
        migrations.AddField(
            model_name='person',
            name='reference',
            field=models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='person', to='bookreview.Reference'),
        ),
        migrations.AddField(
            model_name='formattedtext',
            name='images',
            field=models.ManyToManyField(related_name='texts', to='bookreview.Image'),
        ),
        migrations.AddField(
            model_name='formattedtext',
            name='videos',
            field=models.ManyToManyField(related_name='texts', to='bookreview.Video'),
        ),
        migrations.AddField(
            model_name='film',
            name='actors',
            field=models.ManyToManyField(related_name='films_acted', to='bookreview.Person'),
        ),
        migrations.AddField(
            model_name='film',
            name='director',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='films', to='bookreview.Person'),
        ),
        migrations.AddField(
            model_name='film',
            name='reference',
            field=models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='film', to='bookreview.Reference'),
        ),
        migrations.AddField(
            model_name='film',
            name='writer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='films_written', to='bookreview.Person'),
        ),
        migrations.AddField(
            model_name='book',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='books', to='bookreview.Person'),
        ),
        migrations.AddField(
            model_name='book',
            name='reference',
            field=models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='book', to='bookreview.Reference'),
        ),
        migrations.AddField(
            model_name='book',
            name='translator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='books_translated', to='bookreview.Person'),
        ),
        migrations.AddField(
            model_name='article',
            name='adl_references',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='adl_articles', to='bookreview.Reference'),
        ),
        migrations.AddField(
            model_name='article',
            name='reference',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articles', to='bookreview.Reference'),
        ),
        migrations.AddField(
            model_name='article',
            name='tags',
            field=models.ManyToManyField(related_name='articles', to='bookreview.Tag'),
        ),
        migrations.AddField(
            model_name='article',
            name='text',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='article', to='bookreview.FormattedText'),
        ),
    ]
