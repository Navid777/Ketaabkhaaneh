# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2017-01-06 16:55
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('title', models.TextField()),
                ('thumbnail1', models.ImageField(upload_to='article/thumbnails')),
                ('thumbnail2', models.ImageField(blank=True, null=True, upload_to='article/thumbnails')),
                ('thumbnail3', models.ImageField(blank=True, null=True, upload_to='article/thumbnails')),
                ('main_image', models.ImageField(upload_to='article/images')),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('edition', models.TextField()),
                ('isbn', models.CharField(blank=True, max_length=20, null=True)),
                ('cover_image', models.ImageField(upload_to=b'')),
                ('publish_date', models.DateField(blank=True, null=True)),
                ('articles', models.ManyToManyField(related_name='books', to='bookreview.Article')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('description', models.TextField()),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bookreview.Category')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=10000)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bookreview.Article')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bookreview.Comment')),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('publish_date', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('email', models.EmailField(max_length=254)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PublishHouse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('address', models.TextField(blank=True, null=True)),
                ('website', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.AddField(
            model_name='movie',
            name='actors',
            field=models.ManyToManyField(related_name='played_movies', to='bookreview.Person'),
        ),
        migrations.AddField(
            model_name='movie',
            name='articles',
            field=models.ManyToManyField(related_name='movies', to='bookreview.Article'),
        ),
        migrations.AddField(
            model_name='movie',
            name='categories',
            field=models.ManyToManyField(related_name='movies', to='bookreview.Category'),
        ),
        migrations.AddField(
            model_name='movie',
            name='directors',
            field=models.ManyToManyField(related_name='directed_movies', to='bookreview.Person'),
        ),
        migrations.AddField(
            model_name='book',
            name='authors',
            field=models.ManyToManyField(related_name='written_books', to='bookreview.Person'),
        ),
        migrations.AddField(
            model_name='book',
            name='categories',
            field=models.ManyToManyField(related_name='books', to='bookreview.Category'),
        ),
        migrations.AddField(
            model_name='book',
            name='publisher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='books', to='bookreview.PublishHouse'),
        ),
        migrations.AddField(
            model_name='book',
            name='translators',
            field=models.ManyToManyField(related_name='translated_books', to='bookreview.Person'),
        ),
        migrations.AddField(
            model_name='article',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='written_articles', to='bookreview.Person'),
        ),
        migrations.AddField(
            model_name='article',
            name='categories',
            field=models.ManyToManyField(related_name='articles', to='bookreview.Category'),
        ),
        migrations.AddField(
            model_name='article',
            name='translator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translated_articles', to='bookreview.Person'),
        ),
    ]
